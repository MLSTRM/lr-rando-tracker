export type KeyItem = keyof typeof keyItemNameMap;

export const keyItemNameMap = Object.freeze({
    // Global
    'key_sm_lt': 'Soul Seed',
    'key_soulcd': 'Seedhunter Membership Card',
    // Canvas of Prayers
    'key_b_00': 'Proof of Courage',
    'key_b_01': 'Violet Amulet',
    'key_b_02': 'Lapis Lazuli',
    'key_b_03': 'Power Booster',
    'key_b_04': 'Moogle Dust',
    'key_b_05': 'Old-Fashioned Photo Frame',
    'key_b_06': 'Etro\'s Forbidden Tome',
    'key_b_07': 'Broken Gyroscope',
    'key_b_08': 'Golden Scarab',
    'key_b_09': 'Key to the Sand Gate',
    'key_b_10': 'Key to the Green Gate',
    'key_b_11': 'Bandit\'s Bloodseal',
    'key_b_12': 'Oath of the Merchant\'s Guild',
    'key_b_13': 'Key for the Gates',
    'key_b_14': 'Proof of Unlocking the Light Gate',
    'key_b_15': 'Proof of Unlocking the Green Gate',
    'key_b_16': 'Jade Hair Comb',
    'key_b_17': 'Bronze Pocket Watch',
    'key_b_18': 'Unfired Rocket Fireworks',
    'key_b_19': 'Statue Fragment',
    'key_b_20': 'Chocobo Girl\'s Phone No.',
    // Dead Dunes
    'key_d_key': 'Pilgrim\'s Crux',
    'key_d_inja': 'Anchorite\'s Crux',
    'key_d_sekiban': 'Tablet',
    'key_d_wing': 'Crux Body',
    'key_d_top': 'Crux Tip',
    'key_d_base': 'Crux Base',
    'key_d_seijyo': 'Saint\'s Crux',
    'key_d_oil': 'Bhakti\'s Oil',
    'key_d_lupe': 'Loupe',
    'key_d_keisan': 'Arithmometer',
    'key_d_mikan': 'Unappraised Item',
    'key_d_niku': 'Monster Flesh',
    // Luxerion (main)
    'key_bajji': 'Crest of Etro',
    // Luxerion (side)
    'key_l_pen': 'Quill Pen',
    'key_l_ling': 'Lackley\'s Ring',
    'key_l_hana': 'Phantom Rose',
    'key_l_diary': 'Ranulph\'s Journal',
    'key_l_diary_2': 'Ranulph\'s Journal (contents read)',
    'key_l_kagi': 'Service Entrance Key',
    'key_l_kawa': 'Crystal Shard',
    'key_l_kusa': 'Starlit Spice',
    'key_l_kishin': 'Proof of Legendary Title',
    'key_l_syokai': 'Reddick\'s Letter',
    'key_ball': 'Rubber Ball',
    'key_behi_tume': 'Cursed Dragon Claw', //unused?
    'key_tume': 'Cursed Dragon Claw',
    'key_j_kino': 'Thunderclap Cap',
    'key_kb_g': 'Green Carbuncle Doll',
    'key_kb_r': 'Red Carbuncle Doll',
    'key_kimochi': 'Talbot\'s Gratitude',
    'key_kyu_pass': 'Supply Sphere Password',
    'key_ninjin': 'Mandragora Root',
    'key_niku': 'Shaolong Gui Shell',
    'key_sp_bt': 'Spectral Elixir',
    'key_p_toppa': 'Proof of Overcoming Limits',
    // Yusnaan (main)
    'key_y_ticket': 'Sneaking-in Special Ticket',
    'key_y_id': 'ID Card',
    'key_y_shiji': 'Boss\'s Note',
    'key_y_fire': 'Fireworks',
    'key_y_serap': 'Serah\'s Pendant',
    // Yusnaan (side)
    'key_y_bashira': 'Civet Musk',
    'key_y_cream': 'Steak a la Civet',
    'key_y_death': 'Death Game Ticket',
    'key_y_gabu': 'Niblet-Defeater Emblem',
    'key_y_honou': 'Desert Flame',
    'key_y_kagi1': 'Musical Treasure Sphere Key',
    'key_y_kagi2': 'Nostalgic Score: Chorus',
    'key_y_kagi3': 'Nostalgic Score: Refrain',
    'key_y_rappa': 'Nostalgic Score: Coda',
    'key_y_kaban': 'Music Satchel',
    'key_y_letter': 'Father\'s Letter',
    'key_y_sanka': 'Death Game Point',
    'key_y_sake': 'Bacchus\'s Brew',
    'key_y_recipe': 'Gordon Gourmet\'s Recipe',
    'key_y_megane': 'Gift Glasses',
    // Wildlands (main)
    'key_w_mori': 'Forest Fertilizer',
    'key_w_yasai_t': 'Gysahl Greens (From Dr. Gysahl)',
    'key_w_mogsoul': 'Moogle Fragment',
    // Wildlands (side)
    'key_w_apple': 'Aryas Apple',
    'key_w_buhin1': 'Plate Metal Fragment',
    'key_w_buhin2': 'Silvered Metal Fragment',
    'key_w_buhin3': 'Golden Metal Fragment',
    'key_w_data': 'Data Recorder',
    'key_w_mash': 'Crimm Mushroom',
    'key_w_mogura': 'Rocky Crag Mole',
    'key_w_moji1': 'Goddess Glyphs',
    'key_w_moji2': 'Chaos Glyphs',
    'key_w_hiyaku': 'Cardesia\'s Cure',
    'key_w_tamago': 'Mystery Egg',
    // Sazh main quest
    'key_s_okuri': 'Beloved\'s Gift',
    'key_s_zyouai': 'Fragment of Smiles',
    'key_s_kairaku': 'Fragment of Mischief',
    'key_s_hunnu': 'Fragment of Kindness',
    'key_s_kanki': 'Fragment of Courage',
    'key_s_hiai': 'Fragment of Radiance',
    // Libra
    'libra_m003': 'Gorgonopsid Notes',
    'libra_m012': 'Dreadnought Notes',
    'libra_m034': 'Skata\'ne Notes',
    'libra_m037': 'Triffid Notes',
    'libra_m041': 'Gremlin Notes',
    'libra_m079': 'Flanitor Notes*',
    'libra_m094': 'Goblin Notes',
    'libra_m182': 'Hoplite Notes',
    'libra_m253': 'Cactuar Notes',
    'libra_m253_afr': 'Cactair Notes*',
    'libra_m277': 'Meonekton Notes',
    'libra_m281': 'Miniflan Notes',
    'libra_m290': 'Martyr Notes',
    'libra_m291': 'Cathedral Sentry Notes',
    'libra_m292': 'Patron\'s Personal Guard Notes*',
    'libra_m293': 'Fanatic Notes*',
    'libra_m300': 'Niblet Notes',
    'libra_m301': 'Goblot Notes',
    'libra_m302': 'Vali Notes',
    'libra_m303': 'Hanuman Notes',
    'libra_m304': 'Neela Notes',
    'libra_m305': 'Wendigo Notes',
    'libra_m306': 'Sugriva Notes',
    'libra_m320': 'Anubys Notes',
    'libra_m321': 'Set Notes',
    'libra_m322': 'Gertrude Notes',
    'libra_m323': 'Desdemona Notes',
    'libra_m324': 'Gaunt Notes',
    'libra_m325': 'Dryad Notes',
    'libra_m326': 'Arcangeli Notes',
    'libra_m327': 'Skeleton Notes',
    'libra_m330': 'Desmond Notes',
    'libra_m352': 'Zaltys Notes',
    'libra_m353': 'Zomok Notes',
    'libra_m354': 'Chocobo Eater Notes',
    'libra_m355': 'Earth Eater Notes*',
    'libra_m356': 'Chimera Notes',
    'libra_m357': 'Cyclops Notes',
    'libra_m370': 'Study of the Depths*',
    'libra_m375': 'Study of Despair',
    'libra_m380': 'Prophecy of the Future*',
    'libra_m381': 'Prophecy of Aspiration*',
    'libra_m387': 'Holy Revelations*',
    'libra_m406': 'Gurangatch Notes*',
    'libra_m412': 'Rafflesia Notes',
    'libra_m455': 'Reaver Notes',
    'libra_m491': 'Schrodinger Notes',
    'libra_m745': 'Prophecy of Rebirth*',
    'libra_m770': 'Study of the Savage*',
    'libra_m896': 'Desert Sahagin Notes',
    'libra_m897': 'Ectopudding Notes',
    'libra_m898': 'Aster Protoflorian Notes',
    // Rando specific
    'key_r_kanki': 'Rando: Slaughterhouse Special'
});

function isValidKeyItem(name: string): name is KeyItem {
    return keyItemNameMap.hasOwnProperty(name);
}

export function prettyPrintKeyItem(item: string): { known: boolean, name: string } {
    if (!item) {
        return { known: false, name: '' };
    }
    if (isValidKeyItem(item)) {
        return { known: true, name: keyItemNameMap[item] };
    }
    return { known: false, name: item };
}